{"ast":null,"code":"var _jsxFileName = \"/home/munis/project/indicator/technical-indicator-platform/frontend/src/components/ChartContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { stockAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst ChartContainer = ({\n  stock,\n  results\n}) => {\n  _s();\n  const [priceData, setPriceData] = useState(null);\n  const [chartType, setChartType] = useState('performance');\n  useEffect(() => {\n    if (stock) {\n      fetchPriceData();\n    }\n  }, [stock]);\n  const fetchPriceData = async () => {\n    try {\n      const response = await stockAPI.getStockData(stock.id);\n      setPriceData(response.data);\n    } catch (error) {\n      console.error('Error fetching price data:', error);\n    }\n  };\n  const getPriceChartData = () => {\n    if (!priceData) return null;\n    return {\n      labels: priceData.map(d => new Date(d.date).toLocaleDateString()),\n      datasets: [{\n        label: 'Close Price',\n        data: priceData.map(d => d.close_price),\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        tension: 0.1\n      }]\n    };\n  };\n  const getPerformanceChartData = () => {\n    return {\n      labels: results.map(r => r.indicator_name),\n      datasets: [{\n        label: 'Success Rate (%)',\n        data: results.map(r => r.success_rate),\n        backgroundColor: results.map(r => r.success_rate > 50 ? 'rgba(75, 192, 75, 0.8)' : 'rgba(192, 75, 75, 0.8)')\n      }]\n    };\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: chartType === 'price' ? `${stock.symbol} Price History` : 'Indicator Performance Comparison'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: chartType !== 'price'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: chartType === 'performance' ? 'active' : '',\n        onClick: () => setChartType('performance'),\n        children: \"Performance Comparison\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: chartType === 'price' ? 'active' : '',\n        onClick: () => setChartType('price'),\n        children: \"Price History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: chartType === 'price' && priceData ? /*#__PURE__*/_jsxDEV(Line, {\n        data: getPriceChartData(),\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n        data: getPerformanceChartData(),\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartContainer, \"afnFJ6pwrIBSqvFYzY6ExEmG0Z8=\");\n_c = ChartContainer;\nexport default ChartContainer;\nvar _c;\n$RefreshReg$(_c, \"ChartContainer\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Line","Bar","stockAPI","jsxDEV","_jsxDEV","register","ChartContainer","stock","results","_s","priceData","setPriceData","chartType","setChartType","fetchPriceData","response","getStockData","id","data","error","console","getPriceChartData","labels","map","d","Date","date","toLocaleDateString","datasets","label","close_price","borderColor","backgroundColor","tension","getPerformanceChartData","r","indicator_name","success_rate","chartOptions","responsive","plugins","legend","position","title","display","text","symbol","scales","y","beginAtZero","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["/home/munis/project/indicator/technical-indicator-platform/frontend/src/components/ChartContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { stockAPI } from '../services/api';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ChartContainer = ({ stock, results }) => {\n  const [priceData, setPriceData] = useState(null);\n  const [chartType, setChartType] = useState('performance');\n\n  useEffect(() => {\n    if (stock) {\n      fetchPriceData();\n    }\n  }, [stock]);\n\n  const fetchPriceData = async () => {\n    try {\n      const response = await stockAPI.getStockData(stock.id);\n      setPriceData(response.data);\n    } catch (error) {\n      console.error('Error fetching price data:', error);\n    }\n  };\n\n  const getPriceChartData = () => {\n    if (!priceData) return null;\n\n    return {\n      labels: priceData.map(d => new Date(d.date).toLocaleDateString()),\n      datasets: [\n        {\n          label: 'Close Price',\n          data: priceData.map(d => d.close_price),\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.1)',\n          tension: 0.1\n        }\n      ]\n    };\n  };\n\n  const getPerformanceChartData = () => {\n    return {\n      labels: results.map(r => r.indicator_name),\n      datasets: [\n        {\n          label: 'Success Rate (%)',\n          data: results.map(r => r.success_rate),\n          backgroundColor: results.map(r => \n            r.success_rate > 50 ? 'rgba(75, 192, 75, 0.8)' : 'rgba(192, 75, 75, 0.8)'\n          ),\n        }\n      ]\n    };\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: chartType === 'price' ? `${stock.symbol} Price History` : 'Indicator Performance Comparison'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: chartType !== 'price'\n      }\n    }\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <div className=\"chart-controls\">\n        <button \n          className={chartType === 'performance' ? 'active' : ''}\n          onClick={() => setChartType('performance')}\n        >\n          Performance Comparison\n        </button>\n        <button \n          className={chartType === 'price' ? 'active' : ''}\n          onClick={() => setChartType('price')}\n        >\n          Price History\n        </button>\n      </div>\n\n      <div className=\"chart-wrapper\">\n        {chartType === 'price' && priceData ? (\n          <Line data={getPriceChartData()} options={chartOptions} />\n        ) : (\n          <Bar data={getPerformanceChartData()} options={chartOptions} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChartContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}