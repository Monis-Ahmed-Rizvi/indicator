{"ast":null,"code":"var _jsxFileName = \"/home/munis/project/indicator/technical-indicator-platform/frontend/src/components/IndicatorSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { stockAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndicatorSelector = ({\n  selectedIndicators,\n  onIndicatorChange\n}) => {\n  _s();\n  const [indicators, setIndicators] = useState([]);\n  useEffect(() => {\n    fetchIndicators();\n  }, []);\n  const fetchIndicators = async () => {\n    try {\n      const response = await stockAPI.getIndicators();\n      setIndicators(response.data);\n    } catch (error) {\n      console.error('Error fetching indicators:', error);\n    }\n  };\n  const handleIndicatorToggle = indicatorName => {\n    if (selectedIndicators.includes(indicatorName)) {\n      onIndicatorChange(selectedIndicators.filter(ind => ind !== indicatorName));\n    } else {\n      onIndicatorChange([...selectedIndicators, indicatorName]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"indicator-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Indicators\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicator-grid\",\n      children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-item\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedIndicators.includes(indicator.name),\n            onChange: () => handleIndicatorToggle(indicator.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"indicator-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"indicator-name\",\n              children: indicator.display_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"indicator-category\",\n              children: indicator.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"indicator-description\",\n              children: indicator.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, indicator.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(IndicatorSelector, \"2dx74LO4juDiQTrlpXGeBguVZrw=\");\n_c = IndicatorSelector;\nexport default IndicatorSelector;\nvar _c;\n$RefreshReg$(_c, \"IndicatorSelector\");","map":{"version":3,"names":["React","useState","useEffect","stockAPI","jsxDEV","_jsxDEV","IndicatorSelector","selectedIndicators","onIndicatorChange","_s","indicators","setIndicators","fetchIndicators","response","getIndicators","data","error","console","handleIndicatorToggle","indicatorName","includes","filter","ind","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","indicator","type","checked","name","onChange","display_name","category","description","_c","$RefreshReg$"],"sources":["/home/munis/project/indicator/technical-indicator-platform/frontend/src/components/IndicatorSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { stockAPI } from '../services/api';\n\nconst IndicatorSelector = ({ selectedIndicators, onIndicatorChange }) => {\n  const [indicators, setIndicators] = useState([]);\n\n  useEffect(() => {\n    fetchIndicators();\n  }, []);\n\n  const fetchIndicators = async () => {\n    try {\n      const response = await stockAPI.getIndicators();\n      setIndicators(response.data);\n    } catch (error) {\n      console.error('Error fetching indicators:', error);\n    }\n  };\n\n  const handleIndicatorToggle = (indicatorName) => {\n    if (selectedIndicators.includes(indicatorName)) {\n      onIndicatorChange(selectedIndicators.filter(ind => ind !== indicatorName));\n    } else {\n      onIndicatorChange([...selectedIndicators, indicatorName]);\n    }\n  };\n\n  return (\n    <div className=\"indicator-selector\">\n      <h3>Select Indicators</h3>\n      <div className=\"indicator-grid\">\n        {indicators.map((indicator) => (\n          <div key={indicator.name} className=\"indicator-item\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={selectedIndicators.includes(indicator.name)}\n                onChange={() => handleIndicatorToggle(indicator.name)}\n              />\n              <div className=\"indicator-info\">\n                <span className=\"indicator-name\">{indicator.display_name}</span>\n                <span className=\"indicator-category\">{indicator.category}</span>\n                <span className=\"indicator-description\">{indicator.description}</span>\n              </div>\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default IndicatorSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}